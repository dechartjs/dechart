{"version":3,"sources":["AreaChart/AreaChart.js"],"names":["defaultOptions","areaOpacity","legendHeight","marginBottom","marginLeft","marginRight","marginTop","minYScale","showBulb","showGrid","showLegend","showLinePath","showXAxis","showYAxis","xAxisFontSize","xAxisTicks","yAxisFontSize","yAxisTicks","setEnclosingPath","line","stackData","xScale","yScale","map","data","top","d","idx","date","bottom","reverse","path","replace","topPath","AreaChart","chartType","componentId","options","yMax","$browser","$bulb","$svgRootInner","renderProxy","values","length","forEach","d3","isoParse","ns","cssNamespace","append","attr","style","yGrid","axisLeft","tickFormat","tickValues","tickSize","pureWidth","inner","$chartRoot","select","SVG_ROOT","SVG_ROOT_INNER","empty","call","hasDrawableData","$svgRoot","width","height","max","yMin","min","scaleTime","domain","extent","range","scaleLinear","pureHeight","curve","curveMonotoneX","keys","Object","stack","order","stackOrderNone","offset","stackOffsetNone","pathEnhancedStack","selectAll","enter","key","color","renderGrid","renderXAxis","renderYAxis","renderBulb","renderLegend","xAxis","axisBottom","timeFormat","preprocess","renderRoot","DechartBase","areaChartEvents"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nimport areaChartEvents from './areaChartEvents';\nimport {\n  compose,\n  valueSum,\n} from '../utils';\nimport DechartBase from '../DechartBase';\nimport {\n  SVG_ROOT,\n  SVG_ROOT_INNER,\n} from '../dechart';\n\nconst defaultOptions = {\n  areaOpacity: 1.0,\n  legendHeight: 22,\n  marginBottom: 23,\n  marginLeft: 35,\n  marginRight: 30,\n  marginTop: 5,\n  minYScale: false,\n  showBulb: true,\n  showGrid: true,\n  showLegend: true,\n  showLinePath: false,\n  showXAxis: true,\n  showYAxis: true,\n  xAxisFontSize: '12px',\n  xAxisTicks: 0,\n  yAxisFontSize: '12px',\n  yAxisTicks: 2,\n};\n\nconst setEnclosingPath = (line, stackData, xScale, yScale) => {\n  return stackData.map((data) => {\n    const top = data.map((d, idx) => [ xScale(d.data.date), yScale(d[1]) ]);\n    const bottom = data.map((d, idx) => [ xScale(d.data.date), yScale(d[0]) ]).reverse();\n\n    return {\n      ...data,\n      path: line(top) + line(bottom).replace('M', 'L') + 'Z',\n      topPath: line(top),\n    };\n  });\n};\n\nclass AreaChart extends DechartBase {\n  constructor({\n    chartType,\n    componentId,\n    data,\n    options,\n  }) {\n    super({\n      chartType,\n      componentId,\n      data,\n      defaultOptions,\n      options,\n    });\n    this.xScale = null;\n    this.yScale = null;\n    this.yMax = null;\n\n    this.$browser = null;\n    this.$bulb = null;\n    this.$svgRootInner = null;\n\n    this.renderProxy();\n  }\n\n  hasDrawableData() {\n    return (this.data.values || []).length > 0;\n  }\n\n  preprocess() {\n    this.data.values.forEach((d) => {\n      d.date = d3.isoParse(d.date);\n    });\n  }\n\n  style() {\n    const ns = this.cssNamespace;\n    return `\n      ${ns} .area {\n        fill: blue;\n      }\n\n      ${ns} .grid path {\n        stroke: transparent;\n      }\n\n      ${ns} .grid line {\n        stroke: #dfe1e5;\n      }\n      \n      ${ns} .line {\n        stroke-width: 1px;\n      }\n      \n      ${ns} .tick {\n        font-size: 12px;\n      }\n\n      ${ns} .focus circle {\n        fill: none;\n        stroke: #808080;\n        stroke-width: 1px;\n      }\n      \n      ${ns} .hover-line {\n        stroke: #808080;\n        stroke-width: 2px;\n        stroke-dasharray: 3,3;\n      }\n    `;\n  }\n\n  renderBulb() {\n    this.$bulb = this.$browser.append('g')\n      .attr('class', 'focus')\n      .style('display', 'none');\n\n    this.$bulb.append('line')\n      .attr('class', 'x-hover-line hover-line')\n      .attr('y1', 0)\n      .attr('y2', 0);\n\n    this.$bulb.append('line')\n      .attr('class', 'y-hover-line hover-line')\n      .attr('x1', 0)\n      .attr('x2', 0);\n\n    this.$bulb.append('circle')\n      .attr('class', 'circle')\n      .attr('r', 3.5);\n  }\n\n  renderGrid() {\n    const yGrid = d3.axisLeft(this.yScale)\n      .tickFormat('')\n      .tickValues([ this.yMax / 2.0, this.yMax ])\n      .tickSize(-this.pureWidth);\n\n    const inner = this.$chartRoot.select(`.${SVG_ROOT} .${SVG_ROOT_INNER}`);\n    if (!inner.empty()) {\n      inner.append('g')\n        .attr('class', 'grid')\n        .call(yGrid);\n    }\n  }\n\n  renderRoot() {\n    if (!this.hasDrawableData()) return false;\n    const { data } = this;\n\n    this.$svgRoot\n      .attr('width', this.options.width)\n      .attr('height', this.options.height - this.options.legendHeight);\n    this.$svgRootInner = this.$svgRoot.append('g')\n      .attr('class', SVG_ROOT_INNER)\n      .attr('transform', `translate(\n        ${this.options.marginLeft},\n        ${this.options.marginTop})`);\n\n    this.yMax = d3.max(data.values, (d) => valueSum(d));\n    this.yMin = d3.min(data.values, (d) => valueSum(d));\n\n    this.xScale = d3.scaleTime()\n      .domain(d3.extent(data.values, (d) => d.date))\n      .range([ 0, this.pureWidth ]);\n\n    this.yScale = d3.scaleLinear()\n      .domain([ this.options.minYScale ? this.yMin : 0, this.yMax ])\n      .range([ this.pureHeight, 0 ]);\n\n    const line = d3.line()\n      .curve(d3.curveMonotoneX);\n\n    const keys = Object.keys(data.keys);\n    const stack = d3.stack()\n      .keys(keys)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const pathEnhancedStack = setEnclosingPath(line, stack(data.values), this.xScale, this.yScale);\n\n    this.$browser = this.$svgRootInner.selectAll('.browser')\n      .data(pathEnhancedStack)\n      .enter()\n      .append('g')\n      .attr('class', (d) => `browser ${d.key}`);\n\n    this.$browser.append('path')\n      .attr('class', 'line')\n      .attr('d', (d) => d.path)\n      .attr('fill', (d) => data.keys[d.key].color)\n      .style('opacity', this.options.areaOpacity);\n\n    if (this.options.showLinePath) {\n      this.$browser.append('path')\n        .attr('class', 'line')\n        .attr('d', (d) => d.topPath)\n        .attr('stroke', (d) => data.keys[d.key].color)\n        .attr('fill', 'transparent');\n    }\n\n    this.options.showGrid && this.renderGrid();\n    this.options.showXAxis && this.renderXAxis();\n    this.options.showYAxis && this.renderYAxis();\n    this.options.showBulb && this.renderBulb(data);\n    this.options.showLegend && this.renderLegend(data);\n\n    return true;\n  }\n\n  renderXAxis() {\n    const xAxis = d3.axisBottom(this.xScale)\n      .tickFormat(d3.timeFormat('%m-%d'));\n\n    this.$svgRootInner.append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + this.pureHeight + ')')\n      .call(xAxis);\n  }\n\n  renderYAxis() {\n    this.$svgRootInner.append('g')\n      .attr('class', 'y axis')\n      .call(d3.axisLeft(this.yScale));\n  }\n\n  render() {\n    this.preprocess();\n    return this.renderRoot();\n  }\n};\n\nexport default compose(\n  areaChartEvents,\n)(AreaChart);\n"],"file":"AreaChart.js"}