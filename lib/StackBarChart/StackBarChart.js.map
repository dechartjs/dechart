{"version":3,"sources":["StackBarChart/StackBarChart.js"],"names":["defaultOptions","marginBottom","marginLeft","marginRight","marginTop","minYScale","showGrid","showLegend","showXAxis","showYAxis","xAxisTicks","yAxisTicks","StackBarChart","chartType","componentId","data","options","arguments","g","yScale","pureWidth","append","attr","call","d3","axisLeft","tickSize","tickFormat","svg","margin","payload","pureHeight","height","top","bottom","legend","selectAll","keys","enter","d","i","width","color","label","length","text","values","series","stack","map","key","left","right","dateExtent","extent","x","startDate","Date","endDate","setDate","getDate","xScale","scaleTime","domain","rangeRound","minY","min","scaleLinear","max","range","nice","wrap","drawGrid","layer","rect","elem","transition","delay","xAxis","axisBottom","timeFormat","ticks","yAxis","drawLegend","DechartBase"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nimport DechartBase from '../DechartBase';\n\nconst defaultOptions = {\n  marginBottom: 51,\n  marginLeft: 30,\n  marginRight: 5,\n  marginTop: 10,\n  minYScale: false,\n  showGrid: true,\n  showLegend: true,\n  showXAxis: true,\n  showYAxis: true,\n  xAxisTicks: 0,\n  yAxisTicks: 0,\n};\n\nexport default class StackBarChart extends DechartBase {\n  constructor({\n    chartType,\n    componentId,\n    data,\n    options,\n  }) {\n    super({\n      ...arguments[0],\n      defaultOptions,\n    });\n  }\n\n  drawGrid(g, yScale, pureWidth) {\n    // grid on x axis\n    // g.append('g')\n    //   .attr(\"class\", \"grid\")\n    //   .attr(\"transform\", \"translate(0,\" + pureHeight + \")\")\n    //   .call(d3.axisBottom(xScale)\n    //     .tickValues(xScale.domain().filter((d, i) => {\n    //       return (i % 2);\n    //     }))\n    //     .tickSize(-pureHeight)\n    //     .tickFormat(\"\")\n    //   );\n    // grid on y axis\n\n    g.append('g')\n      .attr('class', 'grid')\n      .call(d3.axisLeft(yScale)\n        .tickSize(-pureWidth)\n        .tickFormat(''));\n  }\n\n  drawLegend(svg, margin) {\n    const payload = this.data;\n\n    const pureHeight = this.options.height - margin.top - margin.bottom;\n\n    const legend = svg.append('g')\n      .attr('class', 'legend-wrapper')\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', 10)\n      .attr('text-anchor', 'end')\n      .selectAll('.legend-wrapper')\n      .data(payload.keys)\n      .enter()\n      .append('g')\n      .attr('transform', (d, i) => {\n        return `translate(${this.options.width / 2 + i * 80 - 90}, ${pureHeight + margin.top + margin.bottom / 2 + 5})`;\n      });\n\n    legend.append('rect')\n      .attr('class', 'legend')\n      .attr('x', 0)\n      .attr('width', (d, i) => {\n        return 16;\n      })\n      .attr('height', 10)\n      .attr('fill', (d, i) => {\n        return payload.keys[i].color;\n      });\n\n    legend.append('text')\n      .attr('x', (d, i) => {\n        return 15 + 7 * d.label.length;\n      })\n      .attr('y', 8)\n      .attr('height', 10)\n      .text((d) => {\n        return d.label;\n      });\n  }\n\n\n  render() {\n    const payload = this.data;\n    const {\n      marginBottom,\n      marginLeft,\n      marginRight,\n      marginTop,\n      showGrid,\n      showLegend,\n      xAxisTicks,\n      yAxisTicks,\n    } = this.options;\n\n    if (!payload || !payload.values) {\n      return;\n    }\n\n    const series = d3.stack()\n      .keys(payload.keys.map((key) => key.label))(payload.values);\n\n    const margin = {\n      bottom: marginBottom,\n      left: marginLeft,\n      right: marginRight,\n      top: marginTop,\n    };\n    const pureWidth = this.options.width - margin.left - margin.right;\n    const pureHeight = this.options.height - margin.top - margin.bottom;\n    const dateExtent = d3.extent(payload.values, (d) => {\n      return (d.x);\n    });\n    const startDate = new Date(dateExtent[0]);\n    const endDate = new Date(dateExtent[1]);\n    endDate.setDate(endDate.getDate() + 1);\n\n    const xScale = d3.scaleTime()\n      .domain([\n        startDate,\n        endDate,\n      ])\n      .rangeRound([ 5, pureWidth - 25 ]);\n\n    const minY = this.options.minYScale\n      ? d3.min(series[series.length - 1], (d) => d[1])\n      : 0;\n    const yScale = d3.scaleLinear()\n      .domain([ minY, d3.max(series[series.length - 1], (d) => d[1]) ])\n      .range([ pureHeight, 0 ])\n      .nice();\n\n    const svg = this.wrap.append('svg')\n      .attr('width', this.options.width)\n      .attr('height', this.options.height);\n\n    const g = svg.append('g')\n      .attr('class', 'graph')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    if (showGrid) {\n      this.drawGrid(g, yScale, pureWidth);\n    }\n\n    const layer = g.selectAll('.layer')\n      .data(series)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .attr('fill', (d, i) => {\n        return payload.keys[i].color;\n      });\n\n    const rect = layer.selectAll('rect')\n      .data((d) => {\n        d.map((elem) => {\n          elem.key = d.key;\n        });\n        return d;\n      })\n      .enter()\n      .append('rect')\n      .attr('x', (d) => {\n        return xScale(new Date(d.data.x));\n      })\n      .attr('y', pureHeight)\n      .attr('width', () => {\n        return 5;\n      })\n      .attr('height', 0);\n\n    rect.transition()\n      .delay((d, i) => {\n        return i * 10;\n      })\n      .attr('y', (d) => {\n        return yScale(d[1]);\n      })\n      .attr('height', (d) => {\n        return yScale(d[0]) - yScale(d[1]);\n      });\n\n    if (this.options.showXAxis) {\n      const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat('%y-%m'));\n      if (xAxisTicks > 0) {\n        xAxis.ticks(xAxisTicks);\n      }\n      g.append('g')\n        .attr('class', 'axis axis-x')\n        .attr('transform', 'translate(0,' + pureHeight + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .attr('dy', '9px');\n      // .attr('transform', 'rotate(-65)');\n    }\n\n    if (this.options.showYAxis) {\n      const yAxis = d3.axisLeft(yScale);\n      if (yAxisTicks > 0) {\n        yAxis.ticks(yAxisTicks);\n      }\n      g.append('g')\n        .attr('class', 'axis axis-y')\n        .attr('transform', 'translate(0,0)')\n        .call(yAxis);\n\n      if (showLegend) {\n        this.drawLegend(svg, margin);\n      }\n    }\n  }\n}\n"],"file":"StackBarChart.js"}