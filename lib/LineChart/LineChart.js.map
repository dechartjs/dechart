{"version":3,"sources":["LineChart/LineChart.js"],"names":["defaultOptions","inChartLeftMargin","inChartRightMargin","legendHeight","marginBottom","marginLeft","marginRight","marginTop","minYScale","showBulb","showGrid","showLegend","showXAxis","showYAxis","xAxisFontSize","xAxisTicks","yAxisFontSize","yAxisTicks","LineChart","chartType","componentId","data","options","arguments","xScale","yScale","yMax","yMin","$bulb","$svgRootInner","renderProxy","keys","values","length","map","d","date","d3","isoParse","sort","x","y","ns","cssNamespace","append","attr","style","yGrid","axisLeft","tickFormat","tickValues","tickSize","pureWidth","call","hasDrawableData","max","v","curr","prev","Object","min","scaleTime","domain","extent","range","scaleLinear","pureHeight","$svgRoot","width","height","renderGrid","renderLine","renderXAxis","renderYAxis","renderBulb","renderLegend","makeLine","xKey","yKey","undefined","Error","line","chunk","selectAll","enter","key","color","xAxis","axisBottom","ticks","tickXAxis","yAxis","i","tickYAxis","preprocess","renderRoot","DechartBase","lineChartEvents"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nimport {\n  abbrNum,\n  compose,\n  getFormattedDate,\n  isMidnight,\n  makeWrap,\n  pick,\n  createEvenlySpacedArray,\n  normalizeMaxValue,\n} from '../utils';\nimport DechartBase from '../DechartBase';\nimport lineChartEvents from './lineChartEvents';\n\nconst defaultOptions = {\n  inChartLeftMargin: 21,\n  inChartRightMargin: 21,\n  legendHeight: 22,\n  marginBottom: 31,\n  marginLeft: 30,\n  marginRight: 5,\n  marginTop: 10,\n  minYScale: false,\n  showBulb: true,\n  showGrid: true,\n  showLegend: true,\n  showXAxis: true,\n  showYAxis: true,\n  xAxisFontSize: '12px',\n  xAxisTicks: 0,\n  yAxisFontSize: '12px',\n  yAxisTicks: 5,\n};\n\nclass LineChart extends DechartBase {\n  constructor({\n    chartType,\n    componentId,\n    data,\n    options,\n  }) {\n    super({\n      ...arguments[0],\n      defaultOptions,\n    });\n    this.xScale = null;\n    this.yScale = null;\n    this.yMax = null;\n    this.yMin = null;\n\n    this.$bulb = null;\n    this.$svgRootInner = null;\n\n    this.renderProxy();\n  }\n\n  hasDrawableData() {\n    return this.data.keys \n      && this.data.values && this.data.values.length > 0;\n  }\n\n  preprocess() {\n    const data = { ...this.data };\n    data.values = [ ...this.data.values ];\n    data.values.map((d) => {\n      d.date = d3.isoParse(d.date);\n    });\n    data.values.sort((x, y) => {\n      return x.date - y.date;\n    });\n    this.data = data;\n  }\n\n  style() {\n    const ns = this.cssNamespace;\n    return `\n      ${ns} .area {\n        fill: blue;\n      }\n\n      ${ns} .grid path {\n        stroke: transparent;\n      }\n\n      ${ns} .grid line {\n        stroke: #dfe1e5;\n      }\n\n      ${ns} .line {\n        fill: none;\n        stroke-width: 2px;\n      }\n\n      ${ns} .focus circle {\n        fill: none;\n        stroke: #808080;\n        stroke-width: 1px;\n      }\n\n      ${ns} .hover-line {\n        stroke: #808080;\n        stroke-width: 2px;\n        stroke-dasharray: 3,3;\n      }\n\n      ${ns} .axis-x .domain {\n        stroke: #cccccc;\n      }\n\n      ${ns} .axis-y .domain {\n        stroke: transparent;\n      }\n\n      ${ns} .axis text {\n        fill: #727a77;\n        text-anchor: start;\n      }\n      \n      ${ns} .axis line {\n        stroke: #cccccc;\n      }\n\n      ${ns} .tick {\n        font-size: 12px;\n      }\n\n      ${ns} .legendWrapper .colorBox {\n        height: 2px;\n        margin-bottom: 3px;\n        margin-right: 6px;\n        width: 20px;\n      }\n    `;\n  }\n\n  renderBulb() {\n    this.$bulb = this.$svgRootInner\n      .append('g')\n      .attr('class', 'focus')\n      .style('display', 'none');\n\n    this.$bulb.append(\"line\")\n      .attr('class', 'x-hover-line hover-line')\n      .attr('y1', 0)\n      .attr('y2', 0);\n\n    this.$bulb.append(\"line\")\n      .attr('class', 'y-hover-line hover-line')\n      .attr('x1', 0)\n      .attr('x2', 0);\n\n    // this.$bulb.append('circle')\n    //   .attr('class', 'circle')\n    //   .attr('r', 3.5);\n  }\n\n  renderGrid() {\n    const yGrid = d3.axisLeft(this.yScale)\n      .tickFormat('')\n      .tickValues(createEvenlySpacedArray(this.yMin, this.yMax, this.options.yAxisTicks))\n      .tickSize(-this.pureWidth);\n\n    this.$svgRootInner.append('g')\n      .attr('class', 'grid')\n      .call(yGrid);\n  };\n\n  renderRoot() {\n    if (!this.hasDrawableData()) {\n      return false;\n    }\n\n    const data = this.data;\n    this.yMax = normalizeMaxValue(d3.max(\n      data.values,\n      (v) => pick((curr, prev) => curr > prev, v, Object.keys(data.keys))\n    ));\n\n    this.yMin = d3.min(\n      data.values,\n      (v) => pick((curr, prev) => curr < prev, v, Object.keys(data.keys))\n    );\n\n    if (this.yMax === this.yMin) {\n      this.yMin = this.yMin / 2.0;\n      this.yMax = this.yMax + this.yMin;\n    }\n\n    this.xScale = d3.scaleTime()\n      .domain(d3.extent(data.values, (v) => {\n        return v.date;\n      }))\n      .range([this.options.inChartLeftMargin, this.pureWidth - this.options.inChartRightMargin]);\n\n    this.yScale = d3.scaleLinear()\n      .domain([this.options.minYScale ? this.yMin : 0, this.yMax])\n      .range([this.pureHeight, 0]);\n\n    this.$svgRoot\n      .attr(\"width\", this.options.width)\n      .attr(\"height\", this.options.height - this.options.legendHeight)\n\n    this.$svgRootInner = this.$svgRoot.append('g')\n      .attr('class', 'svgRootInner')\n      .attr('transform', `translate(\n        ${this.options.marginLeft},\n        ${this.options.marginTop})`);\n\n    this.options.showGrid && this.renderGrid();  \n    this.renderLine();\n    this.options.showXAxis && this.renderXAxis();\n    this.options.showYAxis && this.renderYAxis();\n    this.options.showBulb && this.renderBulb();\n    this.options.showLegend && this.renderLegend(data);\n    \n    return true;\n  }\n\n  renderLine() {\n    const makeLine = (xKey = 'date', yKey) => {\n      if (yKey === undefined) {\n        throw new Error('LineChart needs yKey to make lines');\n      }\n\n      return d3.line()\n        .x((d) => this.xScale(d[xKey]))\n        .y((d) => this.yScale(d[yKey]));\n    };\n\n    const data = this.data\n    const chunk = this.$svgRootInner\n      .selectAll('.chunk')\n      .data([data])\n      .enter();\n\n    for (let key in data.keys) {\n      chunk.append('g')\n        .attr('class', 'chunk')\n        .append('path')\n          .attr('class', 'line')\n          .attr('d' , (d) => {\n            return makeLine('date', key)(d.values);\n          })\n          .attr('stroke', (d) => {\n            return d.keys[key].color;\n          });\n    }\n  }\n\n  renderXAxis() {\n    const xAxis = d3.axisBottom(this.xScale)\n      .tickFormat((date) => getFormattedDate(date));\n\n    this.options.xAxisTicks > 0 && xAxis.ticks(this.options.xAxisTicks);\n\n    const tickXAxis = this.$svgRootInner.append(\"g\")\n      .attr('class', 'axis axis-x')\n      .attr(\"transform\", \"translate(0,\" + this.pureHeight + \")\")\n      .call(xAxis);\n\n    tickXAxis.selectAll('path')\n      .style('display', 'none');\n\n    tickXAxis.selectAll('line')\n      .attr('class', (date) => {\n        return isMidnight(date) ? '' : 'hide';\n      });\n    \n    tickXAxis.selectAll('text')\n      .call(makeWrap(3))\n      .attr('dx', '0em')\n      .attr('dy', '9px')\n      .attr('font-size', this.options.xAxisFontSize);\n  }\n\n  renderYAxis() {\n    const yAxis = d3.axisLeft(this.yScale)\n      .tickValues(createEvenlySpacedArray(this.yMin, this.yMax, this.options.yAxisTicks))\n      .tickFormat((d, i) => abbrNum(d, 1));\n\n    const tickYAxis = this.$svgRootInner.append(\"g\")\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    tickYAxis.selectAll('line')\n      .attr('display', 'none');\n\n    tickYAxis.selectAll('text')\n      .attr('x', '0')\n      .attr('dy', '1.2em')\n      .attr('text-anchor', 'start')\n      .attr('font-size', this.options.yAxisFontSize);\n  }\n\n  render() {\n    if (this.hasDrawableData()) {\n      this.preprocess();\n      return this.renderRoot();\n    }\n  }\n};\n\nexport default compose(\n  lineChartEvents,\n)(LineChart);\n"],"file":"LineChart.js"}