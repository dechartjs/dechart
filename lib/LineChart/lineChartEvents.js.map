{"version":3,"sources":["LineChart/lineChartEvents.js"],"names":["LineChart","prototype","attachEventHandlers","that","svgRootInnerNode","$svgRootInner","node","$svgRoot","on","$bulb","style","emit","syntheticEvent","makeSyntheticEvent","handleMousemoveForBulb","undefined","d3","mouse","clientX","clientY","keys","Object","data","xVal","xScale","invert","_xIdx","values","xIdx","length","selectedData","createSelectedData","bulbX","date","bulbY","getBulbY","yScale","SyntheticEvent","select","attr","key","push","obj","forEach"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport { makeBisector } from '../utils';\nimport SyntheticEvent from '../SyntheticEvent';\n\nexport default function (LineChart) {\n  LineChart.prototype.attachEventHandlers = function () {\n    const that = this;\n    const svgRootInnerNode = that.$svgRootInner && that.$svgRootInner.node();\n\n    that.$svgRoot\n      .on('mouseover', () => {\n        that.$bulb.style('display', null);\n        that.emit('mouseover', {});\n      })\n\n      .on('mouseout', () => {\n        that.$bulb.style('display', 'none');\n        that.emit('mouseout', {});\n      })\n\n      .on('mousemove', () => {\n        const syntheticEvent = makeSyntheticEvent(that, svgRootInnerNode);\n\n        handleMousemoveForBulb(that, syntheticEvent);\n        that.emit('mousemove', syntheticEvent);\n      });\n  };\n\n  return LineChart;\n}\n\nfunction makeSyntheticEvent(that, svgRootInnerNode) {\n  if (svgRootInnerNode === undefined) return;\n\n  const [ clientX, clientY ] = d3.mouse(svgRootInnerNode);\n  const keys = Object.keys(that.data.keys);\n  const xVal = that.xScale.invert(clientX);\n  const _xIdx = makeBisector('date')(that.data.values, xVal);\n  const xIdx = _xIdx >= that.data.values.length ? that.data.values.length - 1 : _xIdx;\n  const selectedData = createSelectedData(that.data.values[xIdx], keys);\n  const bulbX = [ that.xScale(selectedData.date) ];\n  const bulbY = getBulbY(that.yScale, selectedData);\n\n  return new SyntheticEvent({\n    bulbX,\n    bulbY,\n    clientX,\n    clientY,\n    selectedData,\n    xIdx,\n  });\n}\n\nfunction handleMousemoveForBulb(that, syntheticEvent) {\n  const { bulbX } = syntheticEvent;\n\n  that.$bulb.select('.x-hover-line')\n    .attr('y2', that.yScale(0));\n\n  // that.$bulb.select('.y-hover-line')\n  //   .attr('x2', -bulbX);\n\n  that.$bulb\n    .attr(\n      'transform',\n      `translate(\n        ${bulbX},\n        0\n      )`,\n    );\n}\n\nfunction getBulbY(yScale, selectedData) {\n  const bulbY = [];\n  for (const key in selectedData) {\n    key !== 'date' && bulbY.push(yScale(+selectedData[key]));\n  }\n\n  return bulbY;\n}\n\nfunction createSelectedData(data, keys) {\n  const obj = {};\n  keys.forEach((key) => {\n    obj[key] = data[key];\n  });\n  obj.date = data.date;\n  return obj;\n}\n"],"file":"lineChartEvents.js"}